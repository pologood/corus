<help>
  <section title="Description">
   <p>Deploys a distribution, an execution configuration, a shell script, or a file to a given Corus server.</p>
  </section>
  <section title="Syntax">
    <p>deploy &lt;file&gt; [&lt;file2&gt; [&lt;file3&gt; [...]]] [-seq] [-chkmd5 [&lt;value&gt;]] [r] [-cluster]</p>
    <p/>
    <p>OR:</p>
    <p>deploy -e &lt;exec_config_file&gt; [-cluster]</p>
    <p/>
    <p>OR:</p>    
    <p>deploy -f &lt;arbitrary_file&gt; [-d &lt;remote_dir&gt;] [-chkmd5 [&lt;value&gt;]] [-cluster]</p>
    <p/>    
    <p>OR:</p>    
    <p>deploy -s &lt;shell_script&gt; -a &lt;alias&gt; [-d &lt;comment&gt; ] [-chkmd5 [&lt;value&gt;]] [-cluster]</p>
    <p/>    
    <p>OR:</p>    
    <p>deploy -f &lt;docker_image_tar&gt; -img &lt;docker_image_name&gt; [-seq] [-chkmd5 [&lt;value&gt;]] [-cluster]</p>
    <p/>    
    <p>OR:</p>    
    <p>deploy -rev &lt;revId&gt; [-cluster]</p>
    <p/>    
    <p>Where:</p>
    <p/>
    <p>- &lt;file&gt; [&lt;file2&gt; [&lt;file3&gt; [...]]]: a single file, or a space-delimited list of files to deploy. 
    If a file ends with the .xml extension, an execution configuration file is presumed - 
    otherwise it is treated as a distribution archive. The files may consist of absolute paths 
    or paths relative to the directory from which the command-line console was started.</p>
    <p/>
    <p>Note that this argument supports pattern matching: deploy *.zip, deploy dist/*.zip, etc.</p>
    <p/>
    <p>- e: the path to an execution configuration file.</p>
    <p/>
    <p>- f: the path to an arbitrary file to deploy.</p>
    <p/>
    <p>- s: the path to a shell script to deploy.</p>
    <p/>
    <p>- d: in the context of the -f option, interpreted as the directory on the remote Corus note to which to upload the file.</p>
    <p/>    
    <p>- d: in the context of the -f option, interpreted as the directory on the remote Corus note to which to upload the file.
    In the context of the -s option, the -d option is rather interpreted as the description to assign to the shell script being deployed.</p>
    <p/>
    <p>- a: the alias of the shell script being deployed, which will be used in conjunction with the exec and undeploy commands to refer to the shell script.</p>
    <p/>    
    <p>- seq: if the deployment is clustered, indicates that it should be done one host after the other from the client, sequentially (rather than through cascading deployment).</p>
    <p/>    
    <p>- chkmd5: indicates if MD5 checksum validation of the deployed artifact should be done. If a checksum value is provided, that values is used to perform the validation.
     Otherwise, a checksum is computed by this client.</p>
    <p/>
    <p>- r: this option stands for "run scripts". It will trigger the execution of the distribution's packaged scripts (under META-INF/scripts) upon deployment.</p>
    <p/>   
    <p>- docker: indicates that the given file(s) is/are Docker image tarball(s).</p>
    <p/>
    <p>- i: in the context of Docker image deployment: indicates the name of the image to associate to the image tarball.</p>
    <p/>
    <p>- rev: this option specifies a revision under which given distributions have been archived. Through 'deploy', such archived distributions
    can be redeployed.</p>
    <p/>   
    <p>- cluster: if specified, the deployment will be replicated to all Corus servers in the cluster.</p>
  </section>
  <section title="Examples">
    <p>deploy myDistribution.zip</p>
    <p>deploy myDistribution.zip -cluster</p>
    <p>deploy myDistribution.zip -seq -cluster</p>
    <p>deploy myDistribution.zip -r</p>
    <p>deploy -e myExecConfig.xml</p>
    <p>deploy -f someArchive.tar</p>
    <p>deploy -f someArchive.tar -d /opt/archives -cluster</p>
    <p>deploy -s restart_memcached.sh -a restart-memcached -d "restarts memcached"</p>
    <p>deploy -rev previous</p>
    <p>deploy -docker -img my/image:latest -f myImage.tar</p>
    <p>deploy -docker -img my/image:latest -f myImage.tar -cluster</p>
    <p>deploy -rev previous -cluster</p>
    <p/>    
  </section>
</help>